#Model of 5 rung ladder escape
#Design rules: 1) ladders are made of two identical sides, connected by three rungs
#2) rungs are chemospecific, i.e. rungs are a-a, b-b, c-c and never a-b or a-c etc
#3) rung bonds are dynamic, i.e. the bond can be broken then reformed 
#3) all bonds are assumed to be formed at the same rate
#4) all bonds are assumed to dissociate at the same rate
#5) when all three bonds are broken the ladder sides separate and no intermolecular reactions can happen to rejoin the ladder

begin model

begin molecule types #these are the indivisible components in the reaction
L(a,b,c,d,e) #monomer with five specific/individual places for reaction
end molecule types

begin parameters
Lo 100 #initial concentration of seed species
ka 0.01 #rate of bond formation, notated in paper as k-D
kd 0.01 #rate of bond dissociation, notated in paper as k+D
end parameters

begin seed species
L(a!1,b!2,c!3,d!4,e!5).L(a!1,b!2,c!3,d!4,e!5) Lo #starting with ladder and defining with starting concentration of Lo
#L(a!1,b!2,c!3,d!4,e).L(a!1,b!2,c!3,d!4,e) Lo #for starting with four rung ladder
#L(a!1,b!2,c!3,d,e).L(a!1,b!2,c!3,d,e) Lo #for starting with three rung ladder
#L(a!1,b!2,c,d,e).L(a!1,b!2,c,d,e) Lo #for starting with two rung ladder
#L(a!1,b,c,d,e).L(a!1,b,c,d,e) Lo #for starting with one rung/hairpin
end seed species

begin observables
Species Ladder L(a!1,b!2,c!3,d!4,e!5).L(a!1,b!2,c!3,d!4,e!5) #all fully bonded ladders
#Species FourRungs L(a,b!1,c!2,d!3,e!5).L(a,b!1,c!2,d!3,e!5),L(a!1,b,c!2,d!3,e!4).L(a!1,b,c!2,d!3,e!4),L(a!1,b!2,c,d!3,e!4).L(a!1,b!2,c,d!3,e!4),L(a!1,b!2,c!3,d,e!4).L(a!1,b!2,c!3,d,e!4),L(a!1,b!2,c!3,d!4,e).L(a!1,b!2,c!3,d!4,e)
#all ladders with one rung open and four rungs closed
#Species ThreeRungs L(a!1,b!2,c!3,d,e).L(a!1,b!2,c!3,d,e),L(a!1,b!2,c,d!3,e).L(a!1,b!2,c,d!3,e),L(a!1,b,c!2,d!3,e).L(a!1,b,c!2,d!3,e),L(a,b!1,c!2,d!3,e).L(a,b!1,c!2,d!3,e),L(a!1,b,c,d!2,e!3).L(a!1,b,c,d!2,e!3),L(a!1,b,c!2,d!3,e).L(a!1,b,c!2,d!3,e),L(a,b,c!1,d!2,e!3).L(a,b,c!1,d!2,e!3),L(a,b!1,c,d!2,e!3).L(a,b!1,c,d!2,e!3),L(a,b!1,c!2,d,e!3).L(a,b!1,c!2,d,e!3),L(a!1,b!2,c,d,e!3).L(a!1,b!2,c,d,e!3) 
#all ladders with two rungs open and three rungs closed
#Species TwoRungs L(a!1,b!2,c,d,e).L(a!1,b!2,c,d,e),L(a!1,b,c!3,d,e).L(a!1,b,c!3,d,e),L(a,b!2,c!3,d,e).L(a,b!2,c!3,d,e),L(a!1,b,c,d!2,e).L(a!1,b,c,d!2,e),L(a,b,c!1,d!2,e).L(a,b,c!1,d!2,e),L(a,b!1,c,d!2,e).L(a,b!1,c,d!2,e),L(a,b!1,c,d,e!2).L(a,b!1,c,d,e!2),L(a,b,c!1,d,e!2).L(a,b,c!1,d,e!2),L(a,b,c,d!1,e!2).L(a,b,c,d!1,e!2),L(a!1,b,c,d,e!2).L(a!1,b,c,d,e!2) 
#all ladders with three rungs open and two rungs closed
#Species OneRung L(a!1,b,c,d,e).L(a!1,b,c,d,e),L(a,b!1,c,d,e).L(a,b!1,c,d,e),L(a,b,c!1,d,e).L(a,b,c!1,d,e),L(a,b,c,d!1,e).L(a,b,c,d!1,e),L(a,b,c,d,e!1).L(a,b,c,d,e!1) 
#all ladders with four rungs open and one rung closed
Molecules Monomer L(a,b,c,d,e) #all the free strands
end observables

begin reaction rules
L(a!1).L(a!1)<->L(a).L(a) kd,ka #rule for dynamicity of the a rung without reference to other rungs
L(b!1).L(b!1)<->L(b).L(b) kd,ka #rule for dynamicity of the b rung without reference to other rungs
L(c!1).L(c!1)<->L(c).L(c) kd,ka #rule for dynamicity of the c rung without reference to other rungs
L(d!1).L(d!1)<->L(d).L(d) kd,ka #rule for dynamicity of the d rung without reference to other rungs
L(e!1).L(e!1)<->L(e).L(e) kd,ka #rule for dynamicity of the e rung without reference to other rungs
L(a!1,b,c,d,e).L(a!1,b,c,d,e)->L(a,b,c,d,e)+L(a,b,c,d,e) kd #rule for strand escape where a is the last rung
L(a,b!1,c,d,e).L(a,b!1,c,d,e)->L(a,b,c,d,e)+L(a,b,c,d,e) kd #rule for strand escape where b is the last rung
L(a,b,c!1,d,e).L(a,b,c!1,d,e)->L(a,b,c,d,e)+L(a,b,c,d,e) kd #rule for strand escape where c is the last rung
L(a,b,c,d!1,e).L(a,b,c,d!1,e)->L(a,b,c,d,e)+L(a,b,c,d,e) kd #rule for strand escape where d is the last rung
L(a,b,c,d,e!1).L(a,b,c,d,e!1)->L(a,b,c,d,e)+L(a,b,c,d,e) kd #rule for strand escape where e is the last rung
end reaction rules

end model

begin actions
generate_network(); #this generates a network
simulate_ode({suffix=>"ode",t_start=>0,t_end=>10000,n_steps=>100000}); #this does the simulation, with 100,000 steps over 10,000 seconds
end actions

