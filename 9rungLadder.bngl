#Model of 9 rung ladder escape
#Design rules: 1) ladders are made of two identical sides, connected by three rungs
#2) rungs are chemospecific, i.e. rungs are a-a, b-b, c-c and never a-b or a-c etc
#3) rung bonds are dynamic, i.e. the bond can be broken then reformed 
#3) all bonds are assumed to be formed at the same rate
#4) all bonds are assumed to dissociate at the same rate
#5) when all three bonds are broken the ladder sides separate and no intermolecular reactions can happen to rejoin the ladder

begin model

begin molecule types #these are the indivisible components in the reaction
L(a,b,c,d,e,f,g,h,i) #monomer with nine specific/individual places for reaction
end molecule types

begin parameters
Lo 100 #initial concentration of seed species
ka 0.01 #rate of bond formation, notated in paper as k-D
kd 0.01 #rate of bond dissociation, notated in paper as k+D
end parameters

begin seed species
L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h!8,i!9).L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h!8,i!9) Lo #starting with ladder and defining with starting concentration of Lo
#L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h!8,i).L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h!8,i) Lo #for starting with eight rung ladder
#L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h,i).L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h,i) Lo #for starting with seven rung ladder  
#L(a!1,b!2,c!3,d!4,e!5,f!6,g,h,i).L(a!1,b!2,c!3,d!4,e!5,f!6,g,h,i) Lo #for starting with six rung ladder 
#L(a!1,b!2,c!3,d!4,e!5,f,g,h,i).L(a!1,b!2,c!3,d!4,e!5,f,g,h,i) Lo #for starting with five rung ladder
#L(a!1,b!2,c!3,d!4,e,f,g,h,i).L(a!1,b!2,c!3,d!4,e,f,g,h,i) Lo #for starting with four rung ladder
#L(a!1,b!2,c!3,d,e,f,g,h,i).L(a!1,b!2,c!3,d,e,f,g,h,i) Lo #for starting with three rung ladder
#L(a!1,b!2,c,d,e,f,g,h,i).L(a!1,b!2,c,d,e,f,g,h,i) Lo #for starting with two rung ladder
#L(a!1,b,c,d,e,f,g,h,i).L(a!1,b,c,d,e,f,g,h,i) Lo #for starting with one rung/hairpin
end seed species

begin observables
Species Ladder L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h!8,i!9).L(a!1,b!2,c!3,d!4,e!5,f!6,g!7,h!8,i!9) #all fully bonded ladders
Molecules Monomer L(a,b,c,d,e,f,g,h,i) #all the free strands
end observables

begin reaction rules
L(a!1).L(a!1)<->L(a).L(a) kd,ka #rule for dynamicity of the a rung without reference to other rungs
L(b!1).L(b!1)<->L(b).L(b) kd,ka #rule for dynamicity of the b rung without reference to other rungs
L(c!1).L(c!1)<->L(c).L(c) kd,ka #rule for dynamicity of the c rung without reference to other rungs
L(d!1).L(d!1)<->L(d).L(d) kd,ka #rule for dynamicity of the d rung without reference to other rungs
L(e!1).L(e!1)<->L(e).L(e) kd,ka #rule for dynamicity of the e rung without reference to other rungs
L(f!1).L(f!1)<->L(f).L(f) kd,ka #rule for dynamicity of the f rung without reference to other rungs
L(g!1).L(g!1)<->L(g).L(g) kd,ka #rule for dynamicity of the g rung without reference to other rungs
L(h!1).L(h!1)<->L(h).L(h) kd,ka #rule for dynamicity of the h rung without reference to other rungs
L(i!1).L(i!1)<->L(i).L(i) kd,ka #rule for dynamicity of the i rung without reference to other rungs
L(a!1,b,c,d,e,f,g,h,i).L(a!1,b,c,d,e,f,g,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where a is the last rung
L(a,b!1,c,d,e,f,g,h,i).L(a,b!1,c,d,e,f,g,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where b is the last rung
L(a,b,c!1,d,e,f,g,h,i).L(a,b,c!1,d,e,f,g,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where c is the last rung
L(a,b,c,d!1,e,f,g,h,i).L(a,b,c,d!1,e,f,g,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where d is the last rung
L(a,b,c,d,e!1,f,g,h,i).L(a,b,c,d,e!1,f,g,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where e is the last rung
L(a,b,c,d,e,f!1,g,h,i).L(a,b,c,d,e,f!1,g,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where f is the last rung
L(a,b,c,d,e,f,g!1,h,i).L(a,b,c,d,e,f,g!1,h,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where g is the last rung
L(a,b,c,d,e,f,g,h!1,i).L(a,b,c,d,e,f,g,h!1,i)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where h is the last rung
L(a,b,c,d,e,f,g,h,i!1).L(a,b,c,d,e,f,g,h,i!1)->L(a,b,c,d,e,f,g,h,i)+L(a,b,c,d,e,f,g,h,i) kd #rule for strand escape where i is the last rung
end reaction rules

end model

begin actions
generate_network(); #this generates a network
simulate_ode({suffix=>"ode",t_start=>0,t_end=>10000,n_steps=>100000}); #this does the simulation, with 100,000 steps over 10,000 seconds
end actions

